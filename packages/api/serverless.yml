org: hadrysmateusz86
app: writing-tool
service: api

frameworkVersion: ">=1.1.0 <2.0.0"

custom:
  stage: ${opt:stage, self:provider.stage}
  usersTableName: ${self:service}-${self:custom.stage}-users

provider:
  name: aws
  stage: dev
  runtime: nodejs12.x
  region: us-east-1
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  list:
    handler: documents/list.main
    events:
      - http:
          path: documents
          method: get
          cors: true
  create:
    handler: documents/create.main
    events:
      - http:
          path: documents
          method: post
          cors: true

resources:
  Resources:
    DocumentsTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: documentId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: documentId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-pseudo-parameters
